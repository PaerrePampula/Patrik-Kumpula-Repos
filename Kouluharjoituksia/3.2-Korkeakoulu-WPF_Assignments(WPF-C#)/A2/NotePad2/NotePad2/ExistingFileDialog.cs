using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Windows;
using System.Windows.Controls;


namespace NotePad2
{
    class ExistingFileDialog
    {
        /// <summary>
        /// A check for existing files. Returns true if there are changes to a currently opened file
        /// Also returns the dialogchoice that is made in a yes-no-cancel dialog generated by the method
        /// </summary>
        /// <returns></returns>
        public static (bool, MessageBoxResult?) checkForExistingFile()
        {
            //The return item2 must be a Nullable<MessageBoxResult>, hence the ? shorthand for nullable
            //Get the current window instance
            NotePad2.MainWindow currentWindow = (NotePad2.MainWindow)Application.Current.MainWindow;
            //And get the element containing the user inputted text
            TextBox textBox = currentWindow.TextFileBox;
            //If the current instance of Notepad 2 has a file, do a check
            if (NotepadMain.CurrentFilePath != null)
            {
                //If the file also exists as a file on the hard drive, do a check
                if (File.Exists(NotepadMain.CurrentFilePath))
                {
                    //and if the file found is different from the file currently in notepad 2...
                    bool fileHasChanged = !currentWindow.TextFileBox.Text.Equals(File.ReadAllText(NotepadMain.CurrentFilePath));
                    if (fileHasChanged)
                    {
                        //Create some fields for use in a dialog asking if changes are to be saved.
                        string message = "There are unsaved changes. Save Changes?";
                        string caption = "Unsaved changes detected!";
                        //set the possible choices with some generic dialog choices
                        MessageBoxButton button = MessageBoxButton.YesNoCancel;
                        //And create the dialog
                        MessageBoxResult result = MessageBox.Show(message, caption, button);
                        //Return the result of the bool, plus the user choice (Yes, No, Cancel)
                        return (true, result);


                    }
                }
            }
            //If the check fails, return false, plus a messageboxresult that was declared nullable in the return value
            return (false, null);
        }

    }
}
